// **************************************************************************
// property graph model
// **************************************************************************
[model,pg,
  [define,key,string<!neq(id)&!neq(label)>],
  [define,value,@bool|@number|@string],
  [define,property,@key:@value]
  [define,element,[id:@long,label:@string,@property*]
            -> [drop,(id|label)]        => [error]
            -> [put,(id|label),@object] => [error]
            -> [is,@rel,@element]       => ![[get,id][is,@rel,$_0]]]
  [define,vertex,element[inE:@edge*,outE:@edge*]
            -> [add,outE,@edge]         => ![[~,$0][get,inV][add,inE,$0]]
            -> [drop]                   => ![[~,$_0,$_1][drop][~,$_][drop]]
  [define,edge,element[outV:@vertex,inV:@vertex]
            -> [put,(outV|inV),@vertex] => [error]
            -> [drop,(outV|inV)]        => [error]]
  [define,graph,@vertex*
            -> [dedup,![get,id]]        => ![]]]
            
// g.addV('person').property('name','marko').property('age',29).
//     addE('knows').propery('weight',0.5)
//       to(addV('person').property('name','vadas').property('age,27'))  
[db][new]                                                                
    [add,vertex[label:person,name:marko,age:29,inE:<>,outE:<>]]
    [add,outE,edge[label:knows,
                   weight:0.5f,
                   outV :![_],
                   inV  :![[db][add,vertex[label:person,
                                           name:vadas,
                                           age:27,
                                           inE:<>,
                                           outE:<>]]]]]
                                                
[define,varchar255,string<![[op,len][is,lte,255]]>]
[define,short,integer<!between(-32767,32767)>]
[map,varchar255<kuppitz>]
[map,short<42>] 

[put,persons,[name:@string,(age:@int)?]
               -> [dedup,![get,name]]      => ![]
               -> [order,[![get,name],gt]] => ![]]
              
[42,'josh',42,true]      

[db][put,txt1,"a text to a friend"]
    [put,txt2,"another text"]
    [put,txt3,"call me"]
[db][get,txt1]
    [op,split," "]
    [count]
    
[model,mm=>mm,
  [define,CountStrategy,
    bc[@inst*~,([count][is,@rel,@int~])~,@inst*~]
      => bc[$0,[limit,!![op,add,$1,1]],$2,$3]],
  [define,a^nStrategy,
    bc[@inst*~,[repeat,@bytecode*~,[loops,eq,@int~]],@inst*~]
      => bc[$0,!![[start,$1][repeat,[_],[loops,eq,$2],![_]]],$3]],
  [define,a*1Strategy,
    bc[@inst*~,[_],@inst*~]
      => bc[$0,$1]],
  [define,a+0Strategy,
    bc[@inst*~,[branch,[#],@bytecode~],@inst*~]
      => bc[$0,$1,$2]],
  [define,a*0Strategy,
    bc[(@inst&not(typeof(sideeffect)))*,[#],@inst*~]
      => bc[$0]]]    
               
